@{Layout = "/Views/_Layout.cshtml";}
@model Models.ProfileModel
@using System.Text.Json;
@{
    string jsonString = JsonSerializer.Serialize(Model);
}
<head>
    <!-- Styles  -->
    <link rel="stylesheet" type="text/css" href="./Styles/Profiles/Profile.css">

    <!-- Scripts  -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="./Scripts/Profile.js"></script>
    <script type="text/javascript">
        const model = '@jsonString';
        // This is temporary
        localStorage.setItem('profileLink', "@Model.User.ProfileLink");
        document.cookie = 'profilelink=' + "@Model.User.ProfileLink";  
    </script>    
</head>

<div class="profile-container">

    <div class="profile-cover-container">
        @* <img id="profile-cover-img" src="../Images/img-cover.png"> *@
    </div>

    <div class="profile-photo-container">
        <img id="profile-photo-img" src=@Model.User.Photo >
    </div>
    <button class="photo-edit-btn" id="photo-edit-btn">Change photo</button>
    <div class="profile-photo-edit-modal" id="profile-photo-edit-modal">
        <div class="modal-container">
            <span id="profile-photo-close-modal">&times;</span>
            <h2 class="profile-photo-title-modal">Update Profile Picture</h2>
            <hr>
            <form class="form-edit" id="form-profile-picture">
                <input type="file" id="myFile" name="Photo" accept="image/*" data-type='image' >
            </form>
            <div class="profile-photo-modal">
                <img id="profile-photo-modal-img" src=@Model.User.Photo >
            </div>
            <button class="profile-photo-btn" id="photo-save-btn">Save</button>
            <button class="profile-photo-btn" id="photo-cancel-btn">Cancel</button>
        </div>
    </div>

    <div class="profile-name-container">
        <h1>@Model.User.FirstName @Model.User.LastName</h1>
    </div>

    <div class="profile-friendbuttoncontainer">
    @{  
        string profileLink = Model.User.ProfileLink;
        //if user does not own profile
        //show the add a friend button
        if(Model.DoesUserOwnProfile == false)
        {
            if(Model.IsProfileOwnerInFriendReqList)
            {
                <button class="profile-friendbuttoncontainer-addfriend" onclick="{location.href = '/friends'}">Sent you a friend Request</button>   
            }
            else if(Model.IsUserInFriendsList == false && Model.IsUserInFriendReqList == false)
            {
                <button class="profile-friendbuttoncontainer-addfriend" onclick="Addfriend('@Model.User.ProfileLink')">Add Friend</button>
            }
            else if (Model.IsUserInFriendsList == false && Model.IsUserInFriendReqList == true)
            {
                <button class="profile-friendbuttoncontainer-requestsend" >Friend Request Sent</button>
            }
        }
    }
    </div>

    <div class="profile-about-container">
        <div class="profile-about-readonly">
            <h2 id="profile-about-text">@Model.User.About</h2>
            <button class="profile-about-btn" id="about-edit-btn">Edit</button>
        </div>
        
        <div class="profile-about-edit">
            <form class="form-edit" id="form-profile-about">
                <textarea class="form-edit-about" id="form-edit-about" name="About" value=@Model.User.About maxlength="2000"></textarea>
            </form>
            <div class="profile-about-btn-holder">
                <button class="profile-about-btn" id="about-cancel-btn">Cancel</button>
                <button class="profile-about-btn" id="about-save-btn">Save</button>
            </div>
        </div>
        
    </div>
    <div class="profile-tabs-container">
        <hr>
        <div class="profile-btn-container">
            <button class="ext-btn" id="ext-about-btn">About</button>
            <button class="ext-btn" id="ext-posts-btn">Posts</button>
            <button class="ext-btn" id="ext-friends-btn">Friends</button>
            <button class="ext-btn" id="ext-album-btn">Album</button>
        <hr>
        </div>
    </div>
</div>

<div class="profile-ext" id="profile-ext-about">
    @await Html.PartialAsync("ProfileAbout.cshtml", @Model.User)
</div>

<div class="profile-ext" id="profile-ext-posts">
    @await Html.PartialAsync("ProfilePosts.cshtml", @Model)
</div>

<div class="profile-ext" id="profile-ext-friends">
    @await Html.PartialAsync("ProfileFriends.cshtml", Model.FriendsList)
</div>

<div class="profile-ext" id="profile-ext-album">
    @await Html.PartialAsync("ProfileAlbum.cshtml", @Model)
</div>

